name: Release Build
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  BUILD_DIRECTORY: out
  BUILD_TYPE: release

permissions:
  security-events: write
  actions: read
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 360
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        arch: [x64, x86]
        include:
          - os: windows-latest
            BUILD_PLATFORM: windows
          - os: ubuntu-latest
            BUILD_PLATFORM: linux
          - arch: x64
            BUILD_ARCH: x64
          - arch: x86
            BUILD_ARCH: x86
    steps:
      - uses: actions/checkout@v4
        with:  
          submodules: true

      - uses: lukka/get-cmake@latest

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: "c"

      - name: Install Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update -y
          sudo apt install -y libasound2-dev libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev libxcursor-dev libxinerama-dev

      - name: Configure ${{matrix.BUILD_ARCH}}-${{env.BUILD_TYPE}}-${{matrix.BUILD_PLATFORM}}
        run: cmake -S . -B out --preset=${{matrix.BUILD_ARCH}}-${{env.BUILD_TYPE}}-${{matrix.BUILD_PLATFORM}}

      - name: Build ${{env.BUILD_TYPE}}
        run: cmake --build out --config ${{env.BUILD_TYPE}} --target wispy

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: wipsy-${{matrix.BUILD_PLATFORM}}-${{matrix.BUILD_ARCH}}
          path: ./${{env.BUILD_DIRECTORY}}/${{matrix.BUILD_ARCH}}-${{env.BUILD_TYPE}}-${{matrix.BUILD_PLATFORM}}/wispy.exe
